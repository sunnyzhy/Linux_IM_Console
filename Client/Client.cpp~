#include <iostream>
#include <unistd.h>
#include <stdlib.h>
#include <string.h>
#include <sys/socket.h> 
#include <netinet/in.h> 
#include <arpa/inet.h>
#include <errno.h> 
using namespace std;
#define DEFAULT_PORT 8000  
#define MAXLINE 4096  

int main(int argc, char** argv)  
{  
    int socket_fd, len;  
    char buf[MAXLINE];  
    struct sockaddr_in servaddr;  
  
    socket_fd = socket(AF_INET, SOCK_STREAM, 0);
    if( socket_fd == -1 )
    {  
        cout<<"初始化socket失败！errmsg:"<<strerror(errno)<<endl;  
        exit(0);  
    }  

    memset(&servaddr, 0, sizeof(servaddr));  
    servaddr.sin_family = AF_INET;  
    servaddr.sin_port = htons(DEFAULT_PORT);  
    servaddr.sin_addr.s_addr=inet_addr("127.0.0.1");

    len=connect(socket_fd, (struct sockaddr*)&servaddr, sizeof(servaddr));
    if(len< 0)
    {  
        cout<<"连接服务端失败！errmsg:"<<strerror(errno)<<endl;   
        exit(0);  
    }  
    cout<<"connected！"<<endl;  
    while(1)
    {
        cin>>buf;
        len=send(socket_fd, sendline, strlen(sendline), 0);
        if( len < 0)  
        {  
            cout<<"发送数据失败！errmsg:"<<strerror(errno)<<endl;   
            exit(0);  
        }  
        len = recv(socket_fd, buf, MAXLINE,0);
        if(len == -1)
        {  
            cout<<"接收数据失败！errmsg:"<<strerror(errno)<<endl;  
            exit(1);  
        }  
        buf[len]  = '\0';  
        cout<<buf<<endl; 
    }
    close(socket_fd);  
    exit(0);  

    return 0;
}  
